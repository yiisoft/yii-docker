# PHP Docker image for Yii 3.x Framework runtime
# ==============================================

ARG PHP_BASE_IMAGE_VERSION
FROM php:${PHP_BASE_IMAGE_VERSION}

# Install system packages for PHP extensions recommended for Yii
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
# See https://github.com/mlocati/docker-php-extension-installer#supported-php-extensions
RUN install-php-extensions \
        bcmath \
        exif \
        sockets \
        zip \
        intl \
        gettext \
        pdo_mysql \
        pdo_pgsql \
        mongodb \
        gd \
        imagick \
        opcache \
        xdebug

# Disable xdebug by default (see PHP_ENABLE_XDEBUG)
RUN rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Install Composer
RUN install-php-extensions @composer-2.1.3
RUN composer clear-cache

# Set default ENV variables
ENV COMPOSER_ALLOW_SUPERUSER=1 \
    PHP_USER_ID=33 \
    PHP_ENABLE_XDEBUG=0 \
    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH \
    TERM=linux

# Install node (for asset management with foxy)
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g yarn

# Add configuration files
COPY image-files/ /

RUN if [ `echo "$VERSION_XDEBUG" | grep -cE [3][.][0-9]+[.][0-9]+.*` = 1 ]; then \
        rm /usr/local/etc/php/conf.d/xdebug2.ini; \
    else \
        rm /usr/local/etc/php/conf.d/xdebug3.ini; \
    fi

RUN chmod 700 /usr/local/bin/docker-php-entrypoint

# Enable mod_rewrite for images with apache
RUN if command -v a2enmod >/dev/null 2>&1; then \
        a2enmod rewrite headers; \
    fi

# Application environment
WORKDIR /app
